---
identifier: "GHSA-h6xm-c6r4-vmwf"
identifiers:
- "GHSA-h6xm-c6r4-vmwf"
package_slug: "cargo/spl-token-swap"
title: "Unsound usages of `u8` type casting in spl-token-swap"
description: "The library provides a safe public API `unpack` to cast `u8` array to
  arbitrary types, which can cause to undefined behaviors. The length check of array
  can only prevent out-of-bound access on the return type. However, it can't prevent
  misaligned pointer when casting `u8` pointer to a type aligned to larger bytes.
  For example, if we assign `u16` to `T`, **misaligned raw pointer dereference** could
  happen and cause to panic. Even if we pass the type aligned to same byte as `u8`
  (e.g., `bool`), it could construct a illegal type since `bool` can only have 0 or
  1 as bit patterns, which is also an undefined behavior. The further exploits of
  the bug here are still not clear, so we would report this issue as unsound.\n\nThe
  details of PoC to reproduce undefined behavior are provided in the [issue](https://github.com/solana-labs/solana-program-library/issues/5243)."
date: "2024-12-23"
pubdate: "2024-12-23"
affected_range: "<=3.0.0"
fixed_versions: []
affected_versions: "All versions up to 3.0.0"
not_impacted: ""
solution: "Unfortunately, there is no solution available yet."
urls:
- "https://github.com/advisories/GHSA-h6xm-c6r4-vmwf"
- "https://github.com/solana-labs/solana-program-library/issues/5243"
- "https://github.com/solana-labs/solana-program-library"
- "https://rustsec.org/advisories/RUSTSEC-2024-0426.html"
uuid: "fa42ca4f-0f8d-48b4-a104-55bfae96971f"
cwe_ids:
- "CWE-937"
- "CWE-1035"
