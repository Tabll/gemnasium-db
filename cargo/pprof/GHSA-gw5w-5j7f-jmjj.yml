---
identifier: "GHSA-gw5w-5j7f-jmjj"
identifiers:
- "GHSA-gw5w-5j7f-jmjj"
package_slug: "cargo/pprof"
title: "Unsound usages of `std::slice::from_raw_parts` "
description: "The library breaks the safety assumptions when using unsafe API `std::slice::from_raw_parts`.
  First, when using the API in iterator implementation (`TempFdArrayIterator.next`),
  generic type could be any type, which would create and pass a misaligned pointer
  to the unsafe API. Second, when validating the address, the code passed the type
  `c_void`, which could also be any type, leading to potential uninitialized memory
  exposure.\n\nTwo unsound usages here highlight the necessity for developers to perform
  type checks before doing type conversion with unsafe API.\n\nThe panic caused by
  the misalignment causes several downstream applications (e.g., `greptimedb`) to
  crash when using `pprof::report::ReportBuilder::build`.\n\nThis was patched in 0.14.0.\n\nThe
  developer also suggested moving to [pprof2](https://crates.io/crates/pprof2)."
date: "2024-12-05"
pubdate: "2024-12-05"
affected_range: "<0.14.0"
fixed_versions:
- "0.14.0"
affected_versions: "All versions before 0.14.0"
not_impacted: "All versions starting from 0.14.0"
solution: "Upgrade to version 0.14.0 or above."
urls:
- "https://github.com/advisories/GHSA-gw5w-5j7f-jmjj"
- "https://github.com/tikv/pprof-rs/issues/232"
- "https://github.com/tikv/pprof-rs"
- "https://rustsec.org/advisories/RUSTSEC-2024-0408.html"
uuid: "0fc96df5-89d6-4d67-938d-0812e7d47900"
cwe_ids:
- "CWE-937"
- "CWE-1035"
