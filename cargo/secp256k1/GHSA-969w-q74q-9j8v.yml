---
identifier: "GHSA-969w-q74q-9j8v"
identifiers:
- "GHSA-969w-q74q-9j8v"
package_slug: "cargo/secp256k1"
title: "Unsound API in `secp256k1` allows use-after-free and invalid deallocation
  from safe code"
description: "Because of incorrect bounds on method `Secp256k1::preallocated_gen_new`
  it was possible to cause use-after-free from safe consumer code. It was also possible
  to \"free\" memory not allocated by the appropriate allocator.\n\nThe method takes
  a place for storing the context as a mutable reference and returns context containing
  that reference. Because the code internally uses `unsafe` and the bounds were incorrect
  it was possible to create a context that outlived the passed reference (e.g. `'static`).
  Because the context can alternatively carry heap-allocated pointer freed on drop
  it was possible to \"deallocate\" a pointer that wasn't returned from appropriate
  allocator. The code decides whether to free the memory based on type parameter but
  because of missing bound it was possible to construct the context with invalid parameter.\n\nYou
  are unaffected if you either\n\n* don't call `Secp256k1::preallocated_gen_new`\n*
  manually checked that your usage of the method is sound\n* upgraded to the patched
  version of `secp256k1` (recommended)\n\nThe patched version uses correct bounds
  which means it is API-breaking. This effectively means adopting the policy of Rust
  lang itself allowing API-breaking changes to fix soundness bugs. Note however that
  valid straigthforward usage of the code will continue to compile. Only unsound code
  or code that propagates the bound in custom generics will fail to compile. If the
  code is sound fixing the bounds should be sufficient to make the code compile.\n\nSee
  the [GitHub issue](https://github.com/rust-bitcoin/rust-secp256k1/issues/543) for
  example \"exploit\" code and further discussion."
date: "2022-12-08"
pubdate: "2022-12-08"
affected_range: ">=0.14.0 <0.22.2||>=0.23.0 <0.23.5||>=0.24.0 <0.24.2"
fixed_versions:
- "0.22.2"
- "0.23.5"
- "0.24.2"
affected_versions: "All versions starting from 0.14.0 before 0.22.2, all versions
  starting from 0.23.0 before 0.23.5, all versions starting from 0.24.0 before 0.24.2"
not_impacted: "All versions before 0.14.0, all versions starting from 0.22.2 before
  0.23.0, all versions starting from 0.23.5 before 0.24.0, all versions starting from
  0.24.2"
solution: "Upgrade to versions 0.22.2, 0.23.5, 0.24.2 or above."
urls:
- "https://github.com/advisories/GHSA-969w-q74q-9j8v"
- "https://github.com/rust-bitcoin/rust-secp256k1/issues/543"
- "https://github.com/rust-bitcoin/rust-secp256k1"
- "https://rustsec.org/advisories/RUSTSEC-2022-0070.html"
uuid: "e5ffee0e-0247-485c-9408-cfe864c727ae"
cwe_ids:
- "CWE-937"
- "CWE-1035"
