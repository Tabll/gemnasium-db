---
identifier: "GHSA-wfg4-322g-9vqv"
identifiers:
- "GHSA-wfg4-322g-9vqv"
package_slug: "cargo/memoffset"
title: "memoffset allows reading uninitialized memory"
description: "memoffset allows attempt of reading data from address `0` with arbitrary
  type. This behavior is an undefined behavior because address `0` to `std::mem::size_of<T>`
  may not have valid bit-pattern with `T`. Old implementation dereferences uninitialized
  memory obtained from `std::mem::align_of`. Older implementation prior to it allows
  using uninitialized data obtained from `std::mem::uninitialized` with arbitrary
  type then compute offset by taking the address of field-projection. This may also
  result in an undefined behavior for \"father\" that includes (directly or transitively)
  type that [does not allow to be uninitialized](https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html).\n\nThis
  flaw was corrected by using `std::ptr::addr_of` in <https://github.com/Gilnaa/memoffset/pull/50>."
date: "2023-06-21"
pubdate: "2023-06-21"
affected_range: "<0.6.2"
fixed_versions:
- "0.6.2"
affected_versions: "All versions before 0.6.2"
not_impacted: "All versions starting from 0.6.2"
solution: "Upgrade to version 0.6.2 or above."
urls:
- "https://github.com/advisories/GHSA-wfg4-322g-9vqv"
- "https://github.com/Gilnaa/memoffset/issues/24"
- "https://github.com/Gilnaa/memoffset/pull/50"
- "https://github.com/Gilnaa/memoffset"
- "https://rustsec.org/advisories/RUSTSEC-2023-0045.html"
uuid: "8f633d10-7e7d-4f01-834b-09d76ef20d49"
cwe_ids:
- "CWE-937"
- "CWE-1035"
