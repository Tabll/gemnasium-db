---
identifier: "GHSA-83gg-pwxf-jr89"
identifiers:
- "GHSA-83gg-pwxf-jr89"
package_slug: "cargo/array-macro"
title: "`array!` macro is unsound in presence of traits that implement methods it
  calls internally"
description: "Affected versions of this crate called some methods using auto-ref.
  The affected code looked like this.\n\n```rust\nlet mut arr = $crate::__core::mem::MaybeUninit::uninit();\nlet
  mut vec = $crate::__ArrayVec::<T>::new(arr.as_mut_ptr() as *mut T);\n```\n\nIn this
  case, the problem is that `as_mut_ptr` is a method of `&mut MaybeUninit`, not `MaybeUninit`.
  This made it possible for traits to hijack the method calls in order to cause unsoundness.\n\n```rust\ntrait
  AsMutPtr<T> {\nfn as_mut_ptr(&self) -> *mut T;\n}\nimpl<T> AsMutPtr<T> for std::mem::MaybeUninit<T>
  {\nfn as_mut_ptr(&self) -> *mut T {\nstd::ptr::null_mut()\n}\n}\narray![0; 1];\n```\n\nThe
  flaw was corrected by explicitly referencing variables in macro body in order to
  avoid auto-ref."
date: "2022-06-20"
pubdate: "2022-06-16"
affected_range: ">=0.1.2 <1.0.5"
fixed_versions:
- "1.0.5"
affected_versions: "All versions starting from 0.1.2 before 1.0.5"
not_impacted: "All versions before 0.1.2, all versions starting from 1.0.5"
solution: "Upgrade to version 1.0.5 or above."
urls:
- "https://github.com/advisories/GHSA-83gg-pwxf-jr89"
- "https://github.com/xfix/array-macro/commit/01940637dd8f3bfeeee3faf9639fa9ae52f19f4d"
- "https://github.com/rustsec/advisory-db/blob/main/crates/array-macro/RUSTSEC-2020-0161.md"
- "https://github.com/xfix/array-macro"
- "https://gitlab.com/KonradBorowski/array-macro/-/commit/01940637dd8f3bfeeee3faf9639fa9ae52f19f4d"
- "https://rustsec.org/advisories/RUSTSEC-2020-0161.html"
uuid: "813b0c6a-2fa5-4811-81f1-3630fc4bab38"
cwe_ids:
- "CWE-937"
- "CWE-1035"
