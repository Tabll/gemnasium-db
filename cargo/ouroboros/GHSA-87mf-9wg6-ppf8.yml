---
identifier: "GHSA-87mf-9wg6-ppf8"
identifiers:
- "GHSA-87mf-9wg6-ppf8"
package_slug: "cargo/ouroboros"
title: "Ouroboros is Unsound"
description: "In 0.15.0 and prior, Ouroboros works internally by creating a struct
  where all uses of 'this are replaced by 'static. However, a recent addition to Miri
  checks that references passed to functions are valid during the entire execution
  of the function, even when those references are passed inside a struct. This poses
  an issue for dropping self-referencing values, as the reference becomes invalid
  during the dropping process. Effectively, since self-referencing structs are not
  allowed in vanilla Rust, there is no allowance for dropping data during a function
  that has also been given a reference to that data. There's usually no way to pass
  a and &a to the same function.\n\nA fix was attempted, where the struct would be
  turned in to a raw byte array and only transformed back into the underlying data
  type inside each function. This is allowable as a reference can be created and die
  over the body of a function, as long as the reference was created inside the function.
  However, this is also not sound if the original struct contains padding. There is
  no way to initialize padding bytes to a known value that Miri will accept, so when
  it is cast to an array some of the bytes contain uninitialized values. This is not
  acceptable (despite the fact that these bytes are never read) due to the potential
  for optimizations that may read from the uninitialized bytes. Besides which, this
  fix does not allow for template or constant parameters as there is no way to check
  the size of a templated type without giving specific, concrete values for the template
  parameters.\n\nThe final solution was to use this fix while wrapping the raw byte
  array in MaybeUninit<>."
date: "2023-06-16"
pubdate: "2023-06-12"
affected_range: "<0.16.0"
fixed_versions:
- "0.16.0"
affected_versions: "All versions before 0.16.0"
not_impacted: "All versions starting from 0.16.0"
solution: "Upgrade to version 0.16.0 or above."
urls:
- "https://github.com/advisories/GHSA-87mf-9wg6-ppf8"
- "https://github.com/joshua-maros/ouroboros/issues/88"
- "https://github.com/joshua-maros/ouroboros"
- "https://rustsec.org/advisories/RUSTSEC-2023-0042.html"
uuid: "5a0e01e0-cd3a-4151-8d46-9ce013f3d49d"
cwe_ids:
- "CWE-937"
- "CWE-1035"
