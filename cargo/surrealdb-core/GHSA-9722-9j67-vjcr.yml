---
identifier: "GHSA-9722-9j67-vjcr"
identifiers:
- "GHSA-9722-9j67-vjcr"
package_slug: "cargo/surrealdb-core"
title: "Improper Authorization in Select Permissions"
description: "Due to the order in which permissions were processed, some statements,
  filters and computations could lead to leaking field values or record contents to
  users without the required permissions. This behavior could be triggered in different
  scenarios:\n\n- When performing a `SELECT` operation on a table, the values that
  would be returned were iterated over, field permissions would be validated and any
  unauthorized value would be removed from the result returned. However, performing
  a `SELECT VALUE` operation (e.g. `SELECT VALUE private FROM data`) would result
  in a non-iterable value, which would not be removed from the returned result.\n\n-
  When aliasing a field (e.g. `SELECT private AS public FROM data`) for which the
  user did not have `SELECT` permissions within a `SELECT` query, permissions would
  be checked against the field of the resulting document containing the aliased field
  instead of the original document containing the original field. As a consequence,
  the original field value would be returned as the returned field would not match
  the original field where permissions had been defined.\n\n- When calling a function
  in the context of a `SELECT` query and passing a field with permissions as an argument
  to the function (e.g. `SELECT string::lowercase(private) FROM data`), the function
  would receive the field value before it had been removed from the document due to
  `SELECT` permissions. As a result, the function would have access to the value of
  the field regardless of field permissions. This case includes functions called from
  within events and other clauses that support function calling.\n\n- When executing
  a query containing a `WHERE` clause filtering records by a field that the querying
  user does not have access to `SELECT` (e.g. `SELECT public FROM data WHERE private
  ~ \"secret\"`), the response of that query would still take the value of the field
  into account. Even though the value of the protected field would not be returned,
  this behavior could be used as a side channel by the querying user to infer information
  about the value of the field.\n\n- When performing `UPDATE` or `DELETE` operations
  over a table with a user that had those permissions but no `SELECT` permission,
  the `RETURN BEFORE` clause could be used (e.g. `DELETE data RETURN BEFORE`) to read
  the contents of the records prior to the authorized update or the deletion despite
  the querying user not being authorized to perform `SELECT` operations.\n\n- When
  performing `UPDATE` operations on a table for which the user had `SELECT` and `UPDATE`
  permissions, the `SET` clause could reference fields that the user had `UPDATE`
  but no `SELECT` permission for (e.g. `UPDATE data SET public = private`) in order
  to update the value of a field that the user had permission to `SELECT` to the value
  of another field for which the user did not."
date: "2024-10-08"
pubdate: "2024-10-08"
affected_range: "<2.0.4"
fixed_versions:
- "2.0.4"
affected_versions: "All versions before 2.0.4"
not_impacted: "All versions starting from 2.0.4"
solution: "Upgrade to version 2.0.4 or above."
urls:
- "https://github.com/advisories/GHSA-9722-9j67-vjcr"
- "https://github.com/surrealdb/surrealdb/security/advisories/GHSA-9722-9j67-vjcr"
- "https://github.com/surrealdb/surrealdb/issues/2161"
- "https://github.com/surrealdb/surrealdb/issues/3924"
- "https://github.com/surrealdb/surrealdb/pull/4785"
- "https://github.com/surrealdb/surrealdb/pull/4800"
- "https://github.com/surrealdb/surrealdb/pull/4873"
- "https://github.com/surrealdb/surrealdb/commit/439ab99e15314ec5cf87047bf58246db646e3f8c"
- "https://github.com/surrealdb/surrealdb/commit/c382fa158dc84b329328606f663efe574f102a7d"
- "https://github.com/surrealdb/surrealdb/commit/e75e7736b3a028c4b6a4a4bdf00791d76f77e339"
- "https://github.com/surrealdb/surrealdb"
- "https://surrealdb.com/docs/surrealdb/security/summary#permissions"
- "https://surrealdb.com/docs/surrealql/statements/define/field#setting-permissions-on-fields"
- "https://surrealdb.com/docs/surrealql/statements/define/table#defining-permissions"
cvss_v3: "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N"
uuid: "e3b62f07-4e18-4c7e-b254-dd096e779ad4"
cwe_ids:
- "CWE-285"
- "CWE-937"
- "CWE-1035"
