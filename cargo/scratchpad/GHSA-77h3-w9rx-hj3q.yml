---
identifier: "GHSA-77h3-w9rx-hj3q"
identifiers:
- "GHSA-77h3-w9rx-hj3q"
package_slug: "cargo/scratchpad"
title: "User-defined implementations of the safe trait scratchpad::Tracking can cause
  heap buffer overflows"
description: "The `get` and `set` methods of the public trait `scratchpad::Tracking`
  interact with unsafe code regions in the crate, and they influence the computation
  of addresses returned as raw pointers. However, the trait itself is not marked as
  unsafe, meaning users may provide custom implementations under the assumption that
  the crate upholds all safety guarantees.\n\nThis becomes problematic because even
  safe implementations of `get` and `set`-written without using any unsafe code-can
  still result in ill-formed raw pointers. These pointers may later be dereferenced
  within safe APIs of the crate (e.g., `marker::MarkerBack::allocate_slice_copy`),
  potentially leading to arbitrary memory access or heap buffer overflows.\n\nAccording
  to the [penultimate commit](https://github.com/okready/scratchpad/commit/957dee1a3902f48600b06910e8e0b1d5ee7dab83),
  the crate is in maintenance mode awaiting a cleanup that will reduce the area of
  unsafe code. Note that the last commits to the repository are from 4 years ago."
date: "2025-08-14"
pubdate: "2025-08-14"
affected_range: "<=1.3.1"
fixed_versions: []
affected_versions: "All versions up to 1.3.1"
not_impacted: ""
solution: "Unfortunately, there is no solution available yet."
urls:
- "https://github.com/advisories/GHSA-77h3-w9rx-hj3q"
- "https://github.com/okready/scratchpad/issues/2"
- "https://github.com/okready/scratchpad"
- "https://rustsec.org/advisories/RUSTSEC-2025-0049.html"
uuid: "8cf6ecc5-605f-4a08-bf9a-6caa98e1b8a7"
cwe_ids:
- "CWE-122"
- "CWE-937"
- "CWE-1035"
