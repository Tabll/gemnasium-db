---
identifier: "GMS-2022-2556"
identifiers:
- "GHSA-jhqp-vf4w-rpwq"
- "GMS-2022-2556"
- "CVE-2022-31016"
package_slug: "go/github.com/argoproj/argo-cd"
title: "DoS through large manifest files in Argo CD"
description: "### Impact\n\nAll versions of Argo CD starting with v0.7.0 is vulnerable
  to an uncontrolled memory consumption bug, allowing an authorized malicious user
  to crash the [repo-server](https://argo-cd.readthedocs.io/en/stable/operator-manual/architecture/#repository-server)
  service. The repo-server is a critical component of Argo CD, so crashing the repo-server
  effectively denies core Argo CD services (such as syncing Application updates).\n\nTo
  achieve denial of service, the attacker must be an authenticated Argo CD user authorized
  to deploy Applications from a repository which contains (or can be made to contain)
  a large file. \n\n### Patches\n\nA patch for this vulnerability has been released
  in the following Argo CD versions:\n\n* v2.4.1\n* v2.3.5\n* v2.2.10\n* v2.1.16\n\n**The
  patch introduces a new `reposerver.max.combined.directory.manifests.size` config
  parameter, which you should tune before upgrading in production.** It caps the maximum
  total file size of .yaml/.yml/.json files in directory-type (raw manifest) Applications.
  The default max is `10M` per Application. This max is designed to keep any single
  app from consuming more than 3G of memory in the repo-server (manifests consume
  more space in memory than on disk). The 300x ratio assumes a maliciously-crafted
  manifest file. If you only want to protect against accidental excessive memory use,
  it is probably safe to use a smaller ratio.\n\nIf your organization uses directory-type
  Applications with very many manifests or very large manifests then **check the size
  of those manifests and tune the config parameter before deploying this change to
  production**. When testing, make sure to do a \"hard refresh\" in either the CLI
  or UI to test your directory-type App. That will make sure you're using the new
  max logic instead of relying on cached manifest responses from Redis.\n\n### Workarounds\n\nThere
  is no workaround besides upgrading.\n\nTo mitigate the issue, carefully limit 1)
  who can configure repos (determined by [RBAC](https://argo-cd.readthedocs.io/en/stable/getting_started/)),
  2) which repos are allowed (determined by [Project](https://argo-cd.readthedocs.io/en/stable/user-guide/projects/)
  limitations), and 3) who has push access to those repos (determined by your SCM
  provider configuration).\n\n### Credits\n\nDisclosed by ADA Logics in a security
  audit of the Argo project sponsored by CNCF and facilitated by OSTIF. Thanks to
  Adam Korczynski and David Korczynski for their work on the audit.\n\n### For more
  information\n\n* Open an issue in [the Argo CD issue tracker](https://github.com/argoproj/argo-cd/issues)
  or [discussions](https://github.com/argoproj/argo-cd/discussions)\n* Join us on
  [Slack](https://argoproj.github.io/community/join-slack) in channel #argo-cd\n"
date: "2022-06-21"
pubdate: "2022-06-21"
affected_range: ">=v0.7.0 <=v1.8.7"
fixed_versions:
- "v2.1.16"
affected_versions: "All versions starting from 0.7.0 up to 1.8.7"
not_impacted: "All versions before 0.7.0, all versions after 1.8.7"
solution: "Upgrade to version 2.1.16 or above."
urls:
- "https://github.com/argoproj/argo-cd/security/advisories/GHSA-jhqp-vf4w-rpwq"
- "https://github.com/advisories/GHSA-jhqp-vf4w-rpwq"
uuid: "4fce7b61-dff5-407f-ba64-cb693d618c15"
cwe_ids:
- "CWE-1035"
- "CWE-937"
versions:
- number: "v0.7.0"
  commit:
    tags:
    - "v0.7.0"
    sha: "6fc345f555dff62d232fe03bf17b8bf84d7f1b5d"
    timestamp: "20180728010621"
- number: "v1.8.7"
  commit:
    tags:
    - "v1.8.7"
    sha: "eb3d1fb84b9b77cdffd70b14c4f949f1c64a9416"
    timestamp: "20210303070237"
- number: "v2.1.16"
  commit:
    tags:
    - "v2.1.16"
    sha: "903db5fe464032bd5a10bf32fe17639e76634c2a"
    timestamp: "20220621161926"
