---
identifier: "CVE-2025-29786"
identifiers:
- "CVE-2025-29786"
- "GHSA-93mq-9ffx-83m2"
package_slug: "go/github.com/expr-lang/expr"
title: "Memory Exhaustion in Expr Parser with Unrestricted Input"
description: "If the Expr expression parser is given an **unbounded input string**,
  it will attempt to compile the *entire* string and generate an Abstract Syntax Tree
  (AST) node for each part of the expression. In scenarios where input size isnâ€™t
  limited, a malicious or inadvertent extremely large expression can consume excessive
  memory as the parser builds a huge AST. This can ultimately lead to **excessive
  memory usage** and an **Out-Of-Memory (OOM) crash** of the process. This issue is
  relatively uncommon and will only manifest when there are **no restrictions on the
  input size**, i.e. the expression length is allowed to grow arbitrarily large. In
  typical use cases where inputs are bounded or validated, this problem would not
  occur."
date: "2025-03-17"
pubdate: "2025-03-17"
affected_range: "<1.17.0"
fixed_versions:
- "1.17.0"
affected_versions: "All versions before 1.17.0"
not_impacted: "All versions starting from 1.17.0"
solution: "Upgrade to version 1.17.0 or above."
urls:
- "https://nvd.nist.gov/vuln/detail/CVE-2025-29786"
- "https://github.com/advisories/GHSA-93mq-9ffx-83m2"
- "https://github.com/expr-lang/expr/security/advisories/GHSA-93mq-9ffx-83m2"
- "https://github.com/expr-lang/expr/pull/762"
- "https://github.com/expr-lang/expr/commit/0d19441454426d2f58edb22c31f3ba5f99c7a26e"
- "https://github.com/expr-lang/expr"
cvss_v3: "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
uuid: "5dfad22d-3eba-4db2-a60b-5063e5c49235"
cwe_ids:
- "CWE-770"
- "CWE-937"
- "CWE-1035"
