---
identifier: "CVE-2024-29018"
identifiers:
- "CVE-2024-29018"
- "GHSA-mq39-4gv4-mvpx"
package_slug: "go/github.com/docker/docker"
title: "Moby's external DNS requests from 'internal' networks could lead to data exfiltration"
description: "Moby is an open source container framework originally developed by Docker
  Inc. as Docker. It is a key component of Docker Engine, Docker Desktop, and other
  distributions of container tooling or runtimes. As a batteries-included container
  runtime, Moby comes with a built-in networking implementation that enables communication
  between containers, and between containers and external resources.\n\nMoby's networking
  implementation allows for creating and using many networks, each with their own
  subnet and gateway. This feature is frequently referred to as custom networks, as
  each network can have a different driver, set of parameters, and thus behaviors.
  When creating a network, the `--internal` flag is used to designate a network as
  _internal_. The `internal` attribute in a docker-compose.yml file may also be used
  to mark a network _internal_, and other API clients may specify the `internal` parameter
  as well.\n\nWhen containers with networking are created, they are assigned unique
  network interfaces and IP addresses (typically from a non-routable [RFC 1918](https://datatracker.ietf.org/doc/html/rfc1918)
  subnet). The root network namespace (hereafter referred to as the 'host') serves
  as a router for non-internal networks, with a gateway IP that provides SNAT/DNAT
  to/from container IPs.\n\nContainers on an _internal_ network may communicate between
  each other, but are precluded from communicating with any networks the host has
  access to (LAN or WAN) as no default route is configured, and firewall rules are
  set up to drop all outgoing traffic. Communication with the gateway IP address (and
  thus appropriately configured host services) is possible, and the host may communicate
  with any container IP directly.\n\nIn addition to configuring the Linux kernel's
  various networking features to enable container networking, `dockerd` directly provides
  some services to container networks. Principal among these is serving as a resolver,
  enabling service discovery (looking up other containers on the network by name),
  and resolution of names from an upstream resolver.\n\nWhen a DNS request for a name
  that does not correspond to a container is received, the request is forwarded to
  the configured upstream resolver (by default, the host's configured resolver). This
  request is made from the container network namespace: the level of access and routing
  of traffic is the same as if the request was made by the container itself.\n\nAs
  a consequence of this design, containers solely attached to _internal_ network(s)
  will be unable to resolve names using the upstream resolver, as the container itself
  is unable to communicate with that nameserver. Only the names of containers also
  attached to the internal network are able to be resolved.\n\nMany systems will run
  a local forwarding DNS resolver, typically present on a loopback address (`127.0.0.0/8`),
  such as systemd-resolved or dnsmasq. Common loopback address examples include `127.0.0.1`
  or `127.0.0.53`. As the host and any containers have separate loopback devices,
  a consequence of the design described above is that containers are unable to resolve
  names from the host's configured resolver, as they cannot reach these addresses
  on the host loopback device.\n\nTo bridge this gap, and to allow containers to properly
  resolve names even when a local forwarding resolver is used on a loopback address,
  `dockerd` will detect this scenario and instead forward DNS requests from the host/root
  network namespace. The loopback resolver will then forward the requests to its configured
  upstream resolvers, as expected."
date: "2024-03-20"
pubdate: "2024-03-20"
affected_range: ">=26.0.0-rc1 <26.0.0-rc3||>=25.0.0 <25.0.5||<23.0.11"
fixed_versions:
- "26.0.0-rc3"
- "25.0.5"
- "23.0.11"
affected_versions: "All versions before 23.0.11, all versions starting from 25.0.0
  before 25.0.5, all versions starting from 26.0.0-rc1 before 26.0.0-rc3"
not_impacted: "All versions starting from 23.0.11 before 25.0.0, all versions starting
  from 25.0.5 before 26.0.0-rc1, all versions starting from 26.0.0-rc3"
solution: "Upgrade to versions 23.0.11, 25.0.5, 26.0.0-rc3 or above."
urls:
- "https://nvd.nist.gov/vuln/detail/CVE-2024-29018"
- "https://github.com/advisories/GHSA-mq39-4gv4-mvpx"
- "https://github.com/moby/moby/security/advisories/GHSA-mq39-4gv4-mvpx"
- "https://github.com/moby/moby/pull/46609"
- "https://github.com/moby/moby"
cvss_v3: "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"
uuid: "4958f322-651c-4a9a-939d-7d754c4fa996"
cwe_ids:
- "CWE-669"
- "CWE-937"
- "CWE-1035"
