---
identifier: "CVE-2025-47285"
identifiers:
- "CVE-2025-47285"
- "GHSA-qhr6-mgqr-mchm"
package_slug: "pypi/vyper"
title: "Vyper's `concat()` builtin may elide side-effects for zero-length arguments"
description: "`concat()` may skip evaluation of side effects when the length of an
  argument is zero. this is due to a fastpath in the implementation which skips evaluation
  of argument expressions when their length is zero:\nhttps://github.com/vyperlang/vyper/blob/68b68c4b30c5ef2f312b4674676170b8a6eaa316/vyper/builtins/functions.py#L560-L562\n\nin
  practice, it would be very unusual in user code to construct zero-length bytestrings
  using an expression with side-effects, since zero-length bytestrings are typically
  constructed with the empty literal `b\"\"`; the only way to construct an empty bytestring
  which has side effects would be with the ternary operator introduced in v0.3.8,
  e.g. `b\"\" if self.do_some_side_effect() else b\"\"`.\n\nthe following example
  demonstrates how the issue would look in user code\n```vyper\ncounter: public(uint256)\n\n@external\ndef
  test() -> Bytes[256]:\na: Bytes[256] = concat(b\"\" if self.sideeffect() else b\"\",
  b\"aaaa\")\nreturn a\n\ndef sideeffect() -> bool:\nself.counter += 1\nreturn True\n```\n\nthe
  severity assigned is low, since, as mentioned, this would be a very unusual pattern
  in user-code."
date: "2025-05-16"
pubdate: "2025-05-16"
affected_range: "<=0.4.2rc1"
fixed_versions: []
affected_versions: "All versions up to 0.4.2rc1"
not_impacted: ""
solution: "Unfortunately, there is no solution available yet."
urls:
- "https://nvd.nist.gov/vuln/detail/CVE-2025-47285"
- "https://github.com/advisories/GHSA-qhr6-mgqr-mchm"
- "https://github.com/vyperlang/vyper/security/advisories/GHSA-qhr6-mgqr-mchm"
- "https://github.com/vyperlang/vyper/pull/4644"
- "https://github.com/vyperlang/vyper"
- "https://github.com/vyperlang/vyper/blob/68b68c4b30c5ef2f312b4674676170b8a6eaa316/vyper/builtins/functions.py#L560-L562"
uuid: "67c57d02-805c-4ad8-b0d1-7f873ec9caa7"
cwe_ids:
- "CWE-691"
- "CWE-937"
- "CWE-1035"
