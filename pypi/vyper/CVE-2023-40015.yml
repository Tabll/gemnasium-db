---
identifier: "CVE-2023-40015"
identifiers:
- "CVE-2023-40015"
- "GHSA-g2xh-c426-v8mf"
package_slug: "pypi/vyper"
title: "Always-Incorrect Control Flow Implementation"
description: "Vyper is a Pythonic Smart Contract Language. For the following (probably
  non-exhaustive) list of expressions, the compiler evaluates the arguments from right
  to left instead of left to right. `unsafe_add, unsafe_sub, unsafe_mul, unsafe_div,
  pow_mod256, |, &, ^ (bitwise operators), bitwise_or (deprecated), bitwise_and (deprecated),
  bitwise_xor (deprecated), raw_call, <, >, <=, >=, ==, !=, in, not in (when lhs and
  rhs are enums)`. This behaviour becomes a problem when the evaluation of one of
  the arguments produces side effects that other arguments depend on. The following
  expressions can produce side-effect: state modifying external call, state modifying
  internal call, `raw_call`, `pop()` when used on a Dynamic Array stored in the storage,
  `create_minimal_proxy_to`, `create_copy_of`, `create_from_blueprint`. This issue
  has not yet been patched. Users are advised to make sure that the arguments of the
  expression do not produce side effects or, if one does, that no other argument is
  dependent on those side effects."
date: "2023-09-08"
pubdate: "2023-09-04"
affected_range: "<=0.3.9"
fixed_versions: []
affected_versions: "All versions up to 0.3.9"
not_impacted: ""
solution: "Unfortunately, there is no solution available yet."
urls:
- "https://github.com/vyperlang/vyper/security/advisories/GHSA-g2xh-c426-v8mf"
- "https://github.com/advisories/GHSA-g2xh-c426-v8mf"
cvss_v3: "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
uuid: "7ea56a90-1283-47d2-9a91-28ddf0d83f80"
cwe_ids:
- "CWE-1035"
- "CWE-670"
- "CWE-937"
