---
identifier: "CVE-2023-32058"
identifiers:
- "CVE-2023-32058"
- "GHSA-6r8q-pfpv-7cgj"
package_slug: "pypi/vyper"
title: "Vyper vulnerable to integer overflow in loop"
description: "Due to missing overflow check for loop variables, by assigning the iterator
  of a loop to a variable, it is possible to overflow the type of the latter.\n\nIn
  the following example, calling `test` returns `354`, meaning that the variable `a`
  did store `354` a value out of bound for the type `uint8`.\n\n```Vyper\n@external\ndef
  test() -> uint16:\nx:uint8 = 255\na:uint8 = 0\nfor i in range(x, x+100):\na = i\nreturn
  convert(a,uint16)\n```\n\nThe issue seems to happen only in loops of type `for i
  in range(a, a + N)` as in loops of type `for i in range(start, stop)` and `for i
  in range(stop)`, the compiler is able to raise a `TypeMismatch` when trying to overflow
  the variable.\n\nthanks to @trocher for reporting"
date: "2024-11-19"
pubdate: "2023-05-12"
affected_range: "<0.3.8"
fixed_versions:
- "0.3.8"
affected_versions: "All versions before 0.3.8"
not_impacted: "All versions starting from 0.3.8"
solution: "Upgrade to version 0.3.8 or above."
urls:
- "https://nvd.nist.gov/vuln/detail/CVE-2023-32058"
- "https://github.com/advisories/GHSA-6r8q-pfpv-7cgj"
- "https://github.com/vyperlang/vyper/security/advisories/GHSA-6r8q-pfpv-7cgj"
- "https://github.com/vyperlang/vyper/commit/3de1415ee77a9244eb04bdb695e249d3ec9ed868"
- "https://github.com/pypa/advisory-database/tree/main/vulns/vyper/PYSEC-2023-78.yaml"
- "https://github.com/vyperlang/vyper"
cvss_v3: "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
uuid: "623c1f31-39f3-48ba-a5c4-704be3d1cbb5"
cwe_ids:
- "CWE-190"
- "CWE-937"
- "CWE-1035"
