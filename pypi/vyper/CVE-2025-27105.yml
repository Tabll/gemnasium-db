---
identifier: "CVE-2025-27105"
identifiers:
- "CVE-2025-27105"
- "GHSA-4w26-8p97-f4jp"
package_slug: "pypi/vyper"
title: "AugAssign evaluation order causing OOB write within the object in Vyper"
description: "Vyper handles AugAssign statements by first caching the target location
  to avoid double evaluation. However, in the case when target is an access to a DynArray
  and the rhs modifies the array, the cached target will evaluate first, and the bounds
  check will not be re-evaluated during the write portion of the statement. In other
  words, the following code\n\n```vyper\ndef poc():\na: DynArray[uint256, 2] = [1,
  2]\na[1] += a.pop()\n```\n\nis equivalent to:\n```vyper\ndef poc():\na: DynArray[uint256,
  2] = [1, 2]\na[1] += a[len(a) - 1]\na.pop()\n```\nrather than:\n```vyper\ndef poc():\na:
  DynArray[uint256, 2] = [1, 2]\ns: uint256 = a[1]\nt: uint256 = a.pop()\na[1] = s
  + t  # reverts due to oob access\n```"
date: "2025-04-09"
pubdate: "2025-02-21"
affected_range: "<0.4.1"
fixed_versions:
- "0.4.1"
affected_versions: "All versions before 0.4.1"
not_impacted: "All versions starting from 0.4.1"
solution: "Upgrade to version 0.4.1 or above."
urls:
- "https://nvd.nist.gov/vuln/detail/CVE-2025-27105"
- "https://github.com/advisories/GHSA-4w26-8p97-f4jp"
- "https://github.com/vyperlang/vyper/security/advisories/GHSA-4w26-8p97-f4jp"
- "https://github.com/pypa/advisory-database/tree/main/vulns/vyper/PYSEC-2025-31.yaml"
- "https://github.com/vyperlang/vyper"
cvss_v3: "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:H"
uuid: "fd5e4f5a-b970-4e8d-8ab5-5fb59763b1c2"
cwe_ids:
- "CWE-787"
- "CWE-937"
- "CWE-1035"
