---
identifier: "GMS-2024-212"
identifiers:
- "GHSA-c4cm-r9fh-jgj9"
- "GMS-2024-212"
package_slug: "pypi/vng-api-common"
title: "commonground-api-common unexploitable privilege escalation in JWT authentication
  middleware"
description: "### Impact\n\nThis is a privilege escalation vulnerability. The impact
  is negligible and entirely theoretical.\n\nA non-exploitable weakness was found
  in how the client-supplied JWTs are verified. Because an explicit allow-list\nof
  known algorithms is used in the PyJWT library, user-supplied (invalid) algorithms
  are rejected.\n\nIf this was not the case, then the client JWTs could be tampered
  with, resulting in privilege escalation which\nwould allow the attacker to perform
  any operation as any client (impersonation) without leaving a trace of\nthe real
  user/client.\n\n\n### Patches\n\nWill be fixed in 1.12.2\n\n### Workarounds\n\nNone
  needed. But be careful when updating PyJWT. Check that the used PyJWT has no algorithms
  specified with a name in \"\", \"HS25\", \"HS2\", \"HS\", \"H\", or that those algorithms
  are acceptable.\n\n### Details\n\nThe header and payload of JSON Web Tokens (JWTs)
  are cryptographically signed with an algorithm. A JWT has a header field `alg` that
  specifies the algorithm used in the signature.\n\nThe `vng-api-common.middleware.AuthMiddleware`
  uses PyJWT to check the validity of JWT and indicates it should be \"HS256\", otherwise
  an attacker could construct a token with a cryptographically weak token. It should
  indicate this with a list of acceptable algorithms `[\"HS256\"]`, but instead the
  string `\"HS256\"` is passed to PyJWT. PyJWT does not check the type of the argument
  and checks if the `alg` string in the header exists in the acceptable algorithms
  value with the `in` operator. Any substring of `\"HS256\"` passes this `in` check.
  It is not exploitable because there is no such substring in de set of algorithms
  PyJWT supports."
date: "2024-02-09"
pubdate: "2024-02-09"
affected_range: "<=2.0.5"
fixed_versions: []
affected_versions: "All versions up to 2.0.5"
not_impacted: ""
solution: "Unfortunately, there is no solution available yet."
urls:
- "https://github.com/maykinmedia/commonground-api-common/security/advisories/GHSA-c4cm-r9fh-jgj9"
- "https://github.com/maykinmedia/commonground-api-common/commit/20d9345a865338777839e8f02c21cd9d6f5a2cae"
- "https://github.com/advisories/GHSA-c4cm-r9fh-jgj9"
uuid: "65d2d2db-fea2-44cd-bdc6-b50fba4b0094"
cwe_ids:
- "CWE-1035"
- "CWE-937"
