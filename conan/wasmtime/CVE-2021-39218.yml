---
identifier: "CVE-2021-39218"
identifiers:
- "CVE-2021-39218"
- "GHSA-4873-36h9-wv49"
package_slug: "conan/wasmtime"
title: "Out-of-bounds Read"
description: "Wasmtime is an open source runtime for WebAssembly & WASI. In Wasmtime
  from version 0.26.0 and before version 0.30.0 is affected by a memory unsoundness
  vulnerability. There was an invalid free and out-of-bounds read and write bug when
  running Wasm that uses `externref`s in Wasmtime. To trigger this bug, Wasmtime needs
  to be running Wasm that uses `externref`s, the host creates non-null `externrefs`,
  Wasmtime performs a garbage collection (GC), and there has to be a Wasm frame on
  the stack that is at a GC safepoint where there are no live references at this safepoint,
  and there is a safepoint with live references earlier in this frame's function.
  Under this scenario, Wasmtime would incorrectly use the GC stack map for the safepoint
  from earlier in the function instead of the empty safepoint. This would result in
  Wasmtime treating arbitrary stack slots as `externref`s that needed to be rooted
  for GC. At the *next* GC, it would be determined that nothing was referencing these
  bogus `externref`s (because nothing could ever reference them, because they are
  not really `externref`s) and then Wasmtime would deallocate them and run `<ExternRef
  as Drop>::drop` on them. This results in a free of memory that is not necessarily
  on the heap (and shouldn't be freed at this moment even if it was), as well as potential
  out-of-bounds reads and writes. Even though support for `externref`s (via the reference
  types proposal) is enabled by default, unless you are creating non-null `externref`s
  in your host code or explicitly triggering GCs, you cannot be affected by this bug.
  We have reason to believe that the effective impact of this bug is relatively small
  because usage of `externref` is currently quite rare. This bug has been patched
  and users should upgrade to Wasmtime version 0.30.0. If you cannot upgrade Wasmtime
  at this time, you can avoid this bug by disabling the reference types proposal by
  passing `false` to `wasmtime::Config::wasm_reference_types`."
date: "2021-12-10"
pubdate: "2021-09-17"
affected_range: ">=0.26.0 <0.30.0"
fixed_versions:
- "0.30.0"
affected_versions: "All versions starting from 0.26.0 before 0.30.0"
not_impacted: "All versions before 0.26.0, all versions starting from 0.30.0"
solution: "Upgrade to version 0.30.0 or above."
urls:
- "https://nvd.nist.gov/vuln/detail/CVE-2021-39218"
- "https://crates.io/crates/wasmtime"
- "https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-4873-36h9-wv49"
- "https://github.com/bytecodealliance/wasmtime/commit/398a73f0dd862dbe703212ebae8e34036a18c11c"
- "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/Z2Z33FTXFQ6EOINVEQIP4DFBG53G5XIY/"
- "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WAVBRYDDUIY2ZR3K3FO4BVYJKIMJ5TP7/"
cvss_v2: "AV:L/AC:M/Au:N/C:N/I:P/A:P"
cvss_v3: "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:H"
uuid: "b4a6a424-62a4-4ba5-a60f-7a3079a2a29c"
cwe_ids:
- "CWE-1035"
- "CWE-125"
- "CWE-937"
