---
identifier: "CVE-2021-21295"
package_slug: "maven/io.netty/netty-codec-http2"
title: "Inconsistent Interpretation of HTTP Requests (HTTP Request Smuggling)"
description: "If a `Content-Length` header is present in the original `HTTP/2` request, 
  the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is 
  fine as long as the request is not proxied through as `HTTP/1.1`. If the request comes 
  in as an `HTTP/2` stream, gets converted into the `HTTP/1.1` domain objects 
  (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec` and then 
  sent up to the child channel's pipeline and proxied through a remote peer as `HTTP/1.1` 
  this may result in request smuggling. In a proxy case, users may assume the `content-length` 
  is validated somehow, which is not the case. If the request is forwarded to a backend channel 
  that is a `HTTP/1.1` connection, the `Content-Length` now has meaning and needs to be checked. 
  An attacker can smuggle requests inside the body as it gets downgraded from `HTTP/2` 
  to `HTTP/1.1`. Users are only affected if all of this is true; `HTTP2MultiplexCodec` or 
  `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to 
  `HTTP/1.1` objects, and these `HTTP/1.1` objects are forwarded to another remote peer. 
  As a workaround, the user can do the validation by themselves by implementing a custom 
  `ChannelInboundHandler` that is put in the `ChannelPipeline` behind 
  `Http2StreamFrameToHttpObjectCodec`."
date: "2021-04-03"
pubdate: "2021-03-09"
affected_range: "(,4.1.60)"
fixed_versions:
- "4.1.60.Final"
affected_versions: "All versions before 4.1.60"
not_impacted: "All versions starting from 4.1.60"
solution: "Upgrade to version 4.1.60.Final or above."
urls:
- "https://nvd.nist.gov/vuln/detail/CVE-2021-21295"
- "https://github.com/netty/netty/commit/89c241e3b1795ff257af4ad6eadc616cb2fb3dc4"
cvss_v2: "AV:N/AC:H/Au:N/C:N/I:P/A:N"
cvss_v3: "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N"
uuid: "b5a6ba4e-8a9b-4fe0-b171-072eee591395"
