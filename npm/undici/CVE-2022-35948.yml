---
identifier: "CVE-2022-35948"
identifiers:
- "CVE-2022-35948"
- "GHSA-f772-66g8-q5h3"
package_slug: "npm/undici"
title: "Improper Neutralization of Special Elements in Output Used by a Downstream
  Component ('Injection')"
description: "undici is an HTTP/1.1 client, written from scratch for Node.js.`=< undici@5.8.0`
  users is vulnerable to _CRLF Injection_ on headers when using unsanitized input
  as request headers, more specifically, inside the `content-type` header. Example:
  ``` import { request } from 'undici' const unsanitizedContentTypeInput = 'application/json\\r\\n\\r\\nGET
  /foo2 HTTP/1.1' await request('http://localhost:3000, { method: 'GET', headers:
  { 'content-type': unsanitizedContentTypeInput }, }) ``` The above snippet will perform
  two requests in a single `request` API call: 1) `http://localhost:3000/` 2) `http://localhost:3000/foo2`
  This issue was patched in Undici v5.8.1. Sanitize input when sending content-type
  headers using user input as a workaround."
date: "2023-03-28"
pubdate: "2022-08-15"
affected_range: "<5.8.2"
fixed_versions:
- "5.8.2"
affected_versions: "All versions before 5.8.2"
not_impacted: "All versions starting from 5.8.2"
solution: "Upgrade to version 5.8.2 or above."
urls:
- "https://nvd.nist.gov/vuln/detail/CVE-2022-35948"
- "https://github.com/nodejs/undici/security/advisories/GHSA-f772-66g8-q5h3"
- "https://github.com/nodejs/undici/releases/tag/v5.8.2"
- "https://github.com/nodejs/undici/commit/66165d604fd0aee70a93ed5c44ad4cc2df395f80"
cvss_v3: "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N"
uuid: "1c941332-5d09-40e0-9682-12ad26ed3894"
cwe_ids:
- "CWE-1035"
- "CWE-74"
- "CWE-937"
