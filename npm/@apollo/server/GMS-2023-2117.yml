---
identifier: "GMS-2023-2117"
identifiers:
- "GHSA-j5g3-5c8r-7qfx"
- "GMS-2023-2117"
package_slug: "npm/@apollo/server"
title: "Prevent logging invalid header values"
description: "## Impact\n### What kind of vulnerability is it?\nApollo Server can
  log sensitive information (Studio API keys) if they are passed incorrectly (with
  leading/trailing whitespace) or if they have any characters that are invalid as
  part of a header value.\n\n### Who is impacted?\nUsers who (all of the below):\n*
  use either the schema reporting or usage reporting feature\n* use an Apollo Studio
  API key which has invalid header values\n* use the default fetcher (`node-fetch`)
  or configured their own `node-fetch` fetcher\n\nThe following node snippet can test
  whether your API key has invalid header values. This code is taken directly from
  `node-fetch@2`'s header value validation code.\n```js\nconst invalidHeaderCharRegex
  = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\nif (invalidHeaderCharRegex.test('<YOUR_API_KEY>'))
  {\n console.log('potentially affected');\n}\nconsole.log('unaffected');\n```\n\nIf
  the provided API key is not a valid header value, whenever Apollo Server uses that
  API key in a request (to Studio, for example), `node-fetch` will throw an error
  _which contains the header value_. This error is logged in various ways depending
  on the user's configuration, but most likely the console or some configured logging
  service.\n\n### Patches\nThis problem is patched in the latest version of Apollo
  Server as soon as this advisory is published.\n\n### Workarounds\n* Try retrieving
  a new API key from Studio. Note: this may not work if the invalid character is not
  part of the secret (it may be derived from identifiers like graph name, user name).\n*
  Override the `fetcher` \n* Disable schema reporting and/or usage reporting\n\n###
  Solution\n* Apollo Server will now call `.trim()` on incoming API keys in order
  to eliminate leading/trailing whitespace and log a warning when it does so.\n* Apollo
  Server will now perform the same validation of API keys as `node-fetch@2` performs
  on header values on startup. Apollo Server will throw an error on startup (i.e.,
  fail to start completely) and notify the user their API key is invalid along with
  the offending characters."
date: "2023-08-30"
pubdate: "2023-08-30"
affected_range: "<4.9.3"
fixed_versions:
- "4.9.3"
affected_versions: "All versions before 4.9.3"
not_impacted: "All versions starting from 4.9.3"
solution: "Upgrade to version 4.9.3 or above."
urls:
- "https://github.com/apollographql/apollo-server/security/advisories/GHSA-j5g3-5c8r-7qfx"
- "https://github.com/apollographql/apollo-server/commit/2c8106c433c4add4b43e2e2b2f5c5c4887b17314"
- "https://github.com/apollographql/apollo-server/commit/d38b43bac88acdef4295759d7dcc3d4c348d9575"
- "https://github.com/advisories/GHSA-j5g3-5c8r-7qfx"
uuid: "b782b451-f2ad-4bee-9525-2291928105f5"
cwe_ids:
- "CWE-1035"
- "CWE-937"
