---
identifier: "CVE-2022-24815"
identifiers:
- "GHSA-qjmq-8hjr-qcv6"
- "CVE-2022-24815"
package_slug: "npm/generator-jhipster"
title: "Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')"
description: "JHipster is a development platform to quickly generate, develop, & deploy
  modern web applications & microservice architectures. SQL Injection vulnerability
  in entities for applications generated with the option \"reactive with Spring WebFlux\"
  enabled and an SQL database using r2dbc. Applications created without \"reactive
  with Spring WebFlux\" and applications with NoSQL databases are not affected. Users
  who have generated a microservice Gateway using the affected version may be impacted
  as Gateways are reactive by default. Currently, SQL injection is possible in the
  findAllBy(Pageable pageable, Criteria criteria) method of an entity repository class
  generated in these applications as the where clause using Criteria for queries are
  not sanitized and user input is passed on as it is by the criteria. This issue has
  been patched in v7.8.1. Users unable to upgrade should be careful when combining
  criterias and conditions as the root of the issue lies in the `EntityManager.java`
  class when creating the where clause via `Conditions.just(criteria.toString())`.
  `just` accepts the literal string provided. Criteria's `toString` method returns
  a plain string and this combination is vulnerable to sql injection as the string
  is not sanitized and will contain whatever used passed as input using any plain
  SQL."
date: "2022-04-12"
pubdate: "2022-04-07"
affected_range: ">=7.0.0 <7.8.1"
fixed_versions:
- "7.8.1"
affected_versions: "All versions starting from 7.0.0 before 7.8.1"
not_impacted: "All versions before 7.0.0, all versions starting from 7.8.1"
solution: "Upgrade to version 7.8.1 or above."
urls:
- "https://github.com/jhipster/generator-jhipster/security/advisories/GHSA-qjmq-8hjr-qcv6"
- "https://github.com/advisories/GHSA-qjmq-8hjr-qcv6"
uuid: "e8220dd1-c1df-4a26-af7c-eb497e1ab48d"
cwe_ids:
- "CWE-1035"
- "CWE-89"
- "CWE-937"
