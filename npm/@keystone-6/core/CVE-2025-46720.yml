---
identifier: "CVE-2025-46720"
identifiers:
- "CVE-2025-46720"
- "GHSA-hg9m-67mm-7pg3"
package_slug: "npm/@keystone-6/core"
title: "Keystone has an unintended `isFilterable` bypass that can be used as an oracle
  to match hidden fields"
description: "`{field}.isFilterable` access control can be bypassed in `update` and
  `delete` mutations by adding additional unique filters. These filters can be used
  as an oracle to probe the existence or value of otherwise unreadable fields.\n\nSpecifically,
  when a mutation includes a `where` clause with multiple unique filters (e.g. `id`
  and `email`), Keystone will attempt to match records even if filtering by the latter
  fields would normally be rejected by `field.isFilterable` or `list.defaultIsFilterable`.
  This can allow malicious actors to infer the presence of a particular field value
  when a filter is successful in returning a result."
date: "2025-05-05"
pubdate: "2025-05-05"
affected_range: "<6.5.0"
fixed_versions:
- "6.5.0"
affected_versions: "All versions before 6.5.0"
not_impacted: "All versions starting from 6.5.0"
solution: "Upgrade to version 6.5.0 or above."
urls:
- "https://nvd.nist.gov/vuln/detail/CVE-2025-46720"
- "https://github.com/advisories/GHSA-hg9m-67mm-7pg3"
- "https://github.com/keystonejs/keystone/security/advisories/GHSA-hg9m-67mm-7pg3"
- "https://github.com/keystonejs/keystone"
cvss_v3: "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N"
uuid: "7f6ac4ed-f77f-46bc-ba97-ea10dc599eb1"
cwe_ids:
- "CWE-200"
- "CWE-203"
- "CWE-937"
- "CWE-1035"
