---
identifier: "CVE-2024-47061"
identifiers:
- "CVE-2024-47061"
- "GHSA-73rg-f94j-xvhx"
package_slug: "npm/@udecode/plate-core"
title: "Plate allows arbitrary DOM attributes in element.attributes and leaf.attributes"
description: "One longstanding feature of Plate is the ability to add custom DOM attributes
  to any element or leaf using the `attributes` property. These attributes are passed
  to the node component using the `nodeProps` prop.\n\nNote: The `attributes` prop
  that is typically rendered alongside `nodeProps` is unrelated.\n\n```ts\n[{\ntype:
  'p',\nattributes: { 'data-my-attribute': 'This will be rendered on the paragraph
  element' },\nchildren: [{\nbold: true,\nattributes: { 'data-my-attribute': 'This
  will be rendered on the bold leaf element' },\ntext: 'Bold text',\n}],\n}]\n```\n\n```tsx\nconst
  ParagraphElement = ({ attributes, nodeProps, children }) => (\n<p\n{...attributes}\n{...nodeProps}
  // Arbitrary DOM attributes are injected here\n>\n{children}\n</p>\n);\n\nconst
  BoldLeaf = ({ attributes, nodeProps, children }) => (\n<strong\n{...attributes}\n{...nodeProps}
  // Arbitrary DOM attributes are injected here\n>\n{children}\n</strong>\n);\n```\n\nIt
  has come to our attention that this feature can be used for malicious purposes,
  including cross-site scripting (XSS) and information exposure (specifically, users'
  IP addresses and whether or not they have opened a malicious document).\n\nNote
  that the risk of information exposure via `attributes` is only relevant to applications
  in which web requests to arbitrary URLs are not ordinarily allowed. Plate editors
  that allow users to embed images from arbitrary URLs, for example, already carry
  the risk of leaking users' IP addresses to third parties.\n\nAll Plate editors using
  an affected version of `@udecode/plate-core` are vulnerable to these information
  exposure attacks via the `style` attribute and other attributes that can cause web
  requests to be sent.\n\nIn addition, whether or not a Plate editor is vulnerable
  to cross-site scripting attacks using `attributes` depends on a number of factors.
  The most likely DOM attributes to be vulnerable are `href` and `src` on links and
  iframes respectively. Any component that spreads `{...nodeProps}` onto an `<a>`
  or `<iframe>` element and does not later override `href` or `src` will be vulnerable
  to XSS.\n\n```tsx\n<a\nhref={sanitizedHref}\n{...attributes}\n{...nodeProps} //
  Definitely vulnerable to XSS since `href` can be overridden\n>\n```\n\n```tsx\n<a\n{...attributes}\n{...nodeProps}
  // Probably not vulnerable to XSS via `href`\nhref={sanitizedHref}\n>\n```\n\n```tsx\n<a\n{...attributes}\n{...nodeProps}
  // May be vulnerable to XSS via `href` if `href` is sometimes omitted from `sanitizedLinkProps`\n{...sanitizedLinkProps}\n>\n```\n\nReact
  does not allow passing a string to event handler props like `onClick`, so these
  are unlikely (but not impossible) to be vulnerable.\n\nThe attack surface is larger
  for users running older browsers, which may be vulnerable to XSS in DOM attributes
  that are less dangerous (although still vulnerable to information exposure) in modern
  browsers such as `style` or `background`.\n\nPotential attack vectors for delivering
  malicious Slate content to users include:\n\n- Opening a malicious document stored
  on the server\n- Pasting a malicious Slate fragment into a document\n- Receiving
  malicious Slate operations on a collaborative document"
date: "2024-09-20"
pubdate: "2024-09-20"
affected_range: ">=37.0.0 <38.0.6||>=22.0.0 <36.5.9||<21.5.1"
fixed_versions:
- "38.0.6"
- "36.5.9"
- "21.5.1"
affected_versions: "All versions before 21.5.1, all versions starting from 22.0.0
  before 36.5.9, all versions starting from 37.0.0 before 38.0.6"
not_impacted: "All versions starting from 21.5.1 before 22.0.0, all versions starting
  from 36.5.9 before 37.0.0, all versions starting from 38.0.6"
solution: "Upgrade to versions 21.5.1, 36.5.9, 38.0.6 or above."
urls:
- "https://nvd.nist.gov/vuln/detail/CVE-2024-47061"
- "https://github.com/advisories/GHSA-73rg-f94j-xvhx"
- "https://github.com/udecode/plate/security/advisories/GHSA-73rg-f94j-xvhx"
- "https://github.com/udecode/plate/commit/16df6074edac22d56c60e0283eae0740230401c9"
- "https://github.com/udecode/plate"
- "https://www.npmjs.com/package/patch-package"
- "https://yarnpkg.com/cli/patch"
cvss_v3: "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L"
uuid: "ed51ffa4-de0f-48aa-83ad-dd7f145ce9a7"
cwe_ids:
- "CWE-79"
- "CWE-937"
- "CWE-1035"
